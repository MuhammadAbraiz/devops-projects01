pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node21'
    }    
    stages { 
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/rjshk013/devops-projects.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('wanderlust-3tier-project/backend') {
                    sh "npm install"
                }
                dir('wanderlust-3tier-project/frontend') {
                    sh "npm install"
                }
            }
        }

        stage('Run SonarQube') {
            environment {
                scannerHome = tool 'Sonar'
            }
            steps {
                withSonarQubeEnv(installationName: 'sonar-jenkins', credentialsId: 'sonar-token') {
                    // Run sonar-scanner from workspace root to place report-task.txt correctly
                    sh """${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=blog-app \
                        -Dsonar.projectName=blog-app \
                        -Dsonar.sources=wanderlust-3tier-project"""
                }
            }
        }
// stage('SonarQube Quality Gate') {
//     steps {
//         script {
//             echo "⏳ Waiting for SonarQube Quality Gate result (max 10 minutes)..."
//         }
//         timeout(time: 10, unit: 'MINUTES') {
//             waitForQualityGate abortPipeline: true
//         }
//     }
// } 

        stage('OWASP FS SCAN') {
            steps {
                dir('wanderlust-3tier-project') {
                    dependencyCheck additionalArguments: "--scan ./ --disableYarnAudit --disableNodeAudit --nvdApiKey 'be5b87e4-3b1a-4460-b1fe-533c943d39eb'", odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }

        stage('TRIVY FS SCAN') {
            steps {
                script {
                    docker.image('aquasec/trivy').inside("--entrypoint='' -e TRIVY_CACHE_DIR=/var/jenkins_home/.trivy") {
                        sh "trivy fs . > trivyfs.txt"
                    }
                }
            }
        }
    }
}

