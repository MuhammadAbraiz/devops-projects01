pipeline {
    agent { label 'agent' }

    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }

    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
        BACKEND_IMAGE = "devopswithjunaid/wanderlust-backend"
        FRONTEND_IMAGE = "devopswithjunaid/wanderlust-frontend"
    }

    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/devopswithjunaid/devops-projects01.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('wanderlust-3tier-project/backend') {
                    sh "npm install || true"
                }
                dir('wanderlust-3tier-project/frontend') {
                    sh "npm install"
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    script {
                        def scannerHome = tool 'sonar-scanner'
                        dir('wanderlust-3tier-project/backend') {
                            sh """
                                ${scannerHome}/bin/sonar-scanner \
                                -Dsonar.projectKey=wanderlust-backend \
                                -Dsonar.sources=. \
                                -Dsonar.host.url=$SONAR_HOST_URL \
                                -Dsonar.login=$SONAR_AUTH_TOKEN
                            """
                        }
                    }
                }
            }
        }

        stage('Code Quality Check') {
            steps {
                dir('wanderlust-3tier-project/backend') {
                    sh "npm audit --audit-level high || true"
                }
                dir('wanderlust-3tier-project/frontend') {
                    sh "npm audit --audit-level high || true"
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    dir('wanderlust-3tier-project') {
                        sh """
                            docker build -t ${BACKEND_IMAGE}:${IMAGE_TAG} -f ./backend/Dockerfile_optimized ./backend
                            docker build -t ${FRONTEND_IMAGE}:${IMAGE_TAG} -f ./frontend/Dockerfile_optimized ./frontend
                        """
                        sh "docker images | grep wanderlust"
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
                        docker push ${BACKEND_IMAGE}:${IMAGE_TAG}
                        docker push ${FRONTEND_IMAGE}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Remote Deploy') {
            steps {
                script {
                    sshagent(credentials: ['deploy-server-ssh']) {
                        sh '''
                            ssh -o StrictHostKeyChecking=no azureuser@20.55.29.56 "
                                cd /home/azureuser/devops-projects/wanderlust-3tier-project &&
                                export BUILD_NUMBER=${BUILD_NUMBER} &&
                                docker compose pull &&
                                docker compose up -d &&
                                echo 'âœ… Deployment successful'
                            "
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            sh '''
                docker rmi ${BACKEND_IMAGE}:${IMAGE_TAG} || true
                docker rmi ${FRONTEND_IMAGE}:${IMAGE_TAG} || true
                docker system prune -f || true
            '''
        }
    }
}
